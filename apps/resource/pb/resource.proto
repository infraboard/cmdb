syntax = "proto3";

package infraboard.cmdb.resource;
option go_package="github.com/infraboard/cmdb/apps/resource";

enum VENDOR {
    ALIYUN = 0;
    TENCENT = 1;
    HUAWEI = 2;
    VSPHERE = 3;
    AMAZON = 4;
}

enum TYPE {
    // 业务资源
    HOST = 0;
    RDS = 1;
    REDIS = 2;
    BUCKET = 3;
    DISK = 4;
    LB = 5;
    DOMAIN = 6;
    EIP = 7;
    MONGODB = 8;

    // 子资源
    DATABASE = 100;
    ACCOUNT = 101;

    // 未知资源
    OTHER = 199;

    // 辅助资源
    BILL = 200;
    ORDER = 201;
}

enum PAY_MODE {
    // 预付费, 包年包月
    PRE_PAY = 0;
    // 按需
    POST_PAY = 1;
    // 预定
    RESERVED_PAY = 2;
    // 竞价付费
    SPOT_PAY = 3;
    // 没有标识
    NULL = 9;
}

// 使用方式
enum USAGE_MODE {
    // 共享使用
    SHARED = 0;
    // 独占使用
    MONOPOLY = 1;
}

message ResourceSet {
    // @gotags: json:"total"
    int64 total = 1;
    // @gotags: json:"items"
    repeated Resource items = 2;
}

message Resource {
    // 资源元数据信息
    // @gotags: json:"meta"
    Meta meta = 1;
    // 资源规格信息
    // @gotags: json:"spec"
    Spec spec = 2;
    // 资源费用
    // @gotags: json:"cost"
    Cost cost = 3;
    // 资源状态
    // @gotags: json:"status"
    Status status = 4;

    // 关联资源
    // @gotags: json:"related_resources"
    repeated Resource related_resources = 6;
    // 资源内容的hash,用来控制那些需要更新
    // @gotags: json:"content_hash,omitempty"
    ContentHash content_hash = 10;
}

message Meta {
    // 全局唯一Id, 直接使用个云商自己的Id
    // @gotags: json:"id" validate:"required"
    string id = 1; 
   // 资源所属域
    // @gotags: json:"domain" validate:"required"
    string domain = 2;
    // 资源所属空间
    // @gotags: json:"namespace" validate:"required"
    string namespace = 3;
    // 资源所属环境
    // @gotags: json:"env"
    string env = 4;
    // 创建时间
    // @gotags: json:"create_at"
    int64  create_at = 5;
    // 删除时间
    // @gotags: json:"detete_at"
    int64  detete_at = 6;
    // 删除人
    // @gotags: json:"detete_by"
    string  detete_by = 7;
    // 同步时间
    // @gotags: json:"sync_at" validate:"required"
    int64 sync_at = 8; 
    // 同步人
    // @gotags: json:"sync_by"
    string sync_by = 9; 
    // 用于同步的凭证ID
    // @gotags: json:"credential_id"
    string credential_id = 10; 
    // 序列号
    // @gotags: json:"serial_number"
    string serial_number = 11;
    // 使用方式
    // @gotags: json:"usage_mode"
    USAGE_MODE usage_mode = 12;
    // 共享策略, 当一个资源被多个应用共享时, 可以指定允许的应用
    // @gotags: json:"shared_policy" gorm:"serializer:json"
    SharedPolicy shared_policy = 13;
    // 扩展字段
    // @gotags: json:"extra" gorm:"serializer:json"
    map<string, string> extra = 15;
}

message ContentHash {
    // 规格数据Hash
    // @gotags: json:"spec_hash"
    string spec_hash = 1;
    // 费用数据Hash
    // @gotags: json:"cost_hash"
    string cost_hash = 2;
    // 状态数据Hash
    // @gotags: json:"status_hash"
    string status_hash = 3;
    // 标签数据Hash
    // @gotags: json:"tag_hash"
    string tag_hash = 4;
    // 关系数据Hash
    // @gotags: json:"relation_hash"
    string relation_hash = 5;
    // 资源自定义属性Hash
    // @gotags: json:"custom_hash"
    string custom_hash = 6;
}


// 共享策略
message SharedPolicy {
    // 分享的维度
    // @gotags: json:"tag_key"
    string tag_key = 1;
    // 分享给哪些值
    // @gotags: json:"tag_values"
    repeated string tag_values = 2;
}

message Spec {
    // 厂商
    // @gotags: json:"vendor"
    VENDOR vendor = 1;
    // 资源类型
    // @gotags: json:"resource_type"
    TYPE resource_type = 2;
    // 地域
    // @gotags: json:"region"
    string region = 3; 
    // 区域
    // @gotags: json:"zone"
    string zone = 4; 
    // 资源所属账号
    // @gotags: json:"owner"
    string owner = 5;
    // 名称
    // @gotags: json:"name"
    string name = 6;
    // 种类
    // @gotags: json:"category"
    string category = 7;
    // 规格
    // @gotags: json:"type"
    string type = 8;
    // 描述
    // @gotags: json:"description"
    string description = 9;
    // 过期时间
    // @gotags: json:"expire_at"
    int64 expire_at = 10;
    // 更新时间
    // @gotags: json:"update_at"
    int64 update_at = 11;
    // 是否开启实例释放保护
    // @gotags: json:"release_protection"
    optional bool release_protection = 12;

    // 资源占用Cpu数量
    // @gotags: json:"cpu"
    int32 cpu = 15;
    // GPU数量
    // @gotags: json:"gpu"
    int32 gpu = 16;
    // 资源使用的内存
    // @gotags: json:"memory"
    int32 memory = 17;
    // 资源使用的存储
    // @gotags: json:"storage"
    int32 storage = 18;
    // 公网IP带宽, 单位M
    // @gotags: json:"band_width"
    int32 band_width =19;

    // 资源标签
    // @gotags: json:"tags"
    repeated Tag tags = 25;
    // 额外的通用属性
    // @gotags: json:"extra" gorm:"serializer:json"
    map<string, string> extra = 26;
}

// 资源当前状态
message Status {
    // 资源当前状态
    // @gotags: json:"phase"
    string phase = 1;
    // 资源当前状态描述
    // @gotags: json:"describe"
    string describe = 2;
    // 实例锁定模式; Unlock：正常；ManualLock：手动触发锁定；LockByExpiration：实例过期自动锁定；LockByRestoration：实例回滚前的自动锁定；LockByDiskQuota：实例空间满自动锁定
    // @gotags: json:"lock_mode"
    string lock_mode = 3;
    // 锁定原因
    // @gotags: json:"lock_reason"
    string lock_reason = 4;
    // 资源访问地址
    // 公网地址, 或者域名
    // @gotags: json:"public_address" gorm:"serializer:json"
    repeated string public_address = 5;
    // 内网地址, 或者域名
    // @gotags: json:"private_address" gorm:"serializer:json"
    repeated string private_address = 6;
}

// 标签用途
enum TAG_PURPOSE {
    // 用于资源分组
    GROUP = 0;
    // 系统使用标签, 表示被其他系统引用, 比如应用关联标签
    SYSTEM = 1;
    // 用于资源监控
    MONITOR = 2;
    // 来自第三方的标签, 比如同步时的第三方提供的标签
    THIRDPARTY = 3;
}

message Tag {
    // 标签的类型
    // @gotags: json:"purpose"
    TAG_PURPOSE purpose = 1;
    // 标签的Key
    // @gotags: json:"key" validate:"lte=255,required"
    string key = 2;
    // 标签的值
    // @gotags: json:"value" validate:"lte=255,required"
    string value = 3;
    // 标签的值的描述, 通常用于展示
    // @gotags: json:"describe"
    string describe = 4;
    // 标签权重, 针对同一个key, 多个value场景, 默认值1
    // @gotags: json:"weight"
    int64 weight = 5;
    // 是否是只读标签
    // @gotags: json:"read_only"
    bool read_only = 6;
    // 标签是否隐藏, 用于控制是否在前端展示
    // @gotags: json:"hidden"
    bool hidden = 7;
    // 标签删除时间
    // @gotags: json:"delete_at"
    int64 delete_at = 8;
    // 标签删除人
    // @gotags: json:"delete_by"
    bool delete_by = 9;
    // 标签更新时间
    // @gotags: json:"update_at"
    int64 update_at = 10;
    // 标签更新人
    // @gotags: json:"update_by"
    bool update_by = 11;
    // 标签meta信息, 比如前端需要设置标签的颜色
    // @gotags: json:"meta" gorm:"serializer:json"
    map<string,string> meta = 15;
}

message TagSet {
    // @gotags: json:"total"
    int64 total = 1;
    // @gotags: json:"items"
    repeated Tag items = 2;
}

// 资产价格, 包年包月 记录月
message Cost {
    // 实例付费方式
    // @gotags: json:"pay_mode"
    PAY_MODE pay_mode = 1;
    // 付费方式详情
    // @gotags: json:"pay_mode_detail"
    string pay_mode_detail = 2;
    // 官网价,原价（分）
    // @gotags: json:"sale_price"
    double sale_price = 3;
    // 实际支付金额（分）
    // @gotags: json:"real_cost"
    double real_cost = 4;
    // 折扣率
    // @gotags: json:"policy"
    double policy = 5;
    // 单价（分）
    // @gotags: json:"unit_price"
    double unit_price = 6;
}

enum UpdateAction {
    // 添加
    ADD = 0;
    // 移除
    REMOVE = 1;
}